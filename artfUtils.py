
import os;
from pathlib import Path;
import pandas as pd;

import mrkUtils

def getAnnotators(autoannotations_path):
    try:
        # Get auto-annotations file
        auto_read = pd.read_excel(autoannotations_path)
        return auto_read['annotator'].unique()

    except Exception as e:
        print("Error: No autogenerated annotations:", autoannotations_path, e)
        return

def toMRK(autoannotations_path, mrkFilePathParts):

    annotators = getAnnotators(autoannotations_path)

    if (annotators == None): return

    # Handle different algorithms
    for annotator in annotators: 
        mrkFilePath = os.path.join(mrkFilePathParts[0], annotator, mrkFilePathParts[1])

        # Create .mrk file if it doesn't exist
        os.makedirs(os.path.dirname(mrkFilePath), exist_ok=True)
        fle = Path(mrkFilePath)
        fle.touch(exist_ok=True)
        
        # HANDLE AUTOMATIC ANNOTATIONS
        mrks = get(autoannotations_path, 'mrk', annotator)

        # Write to the appropriate .mrk file
        mrkUtils.write(mrkFilePath, mrks)


def get(autoannotations_path, type = 'all', annotator=None):
    try:
        # Get auto-annotations file
        auto_read = pd.read_excel(autoannotations_path)

        # Organize as a marker array
        fileinfo = []

        for header, row in auto_read.iterrows():
            if (type == 'mrk'): info = [row['label'], 0, row['onset'], row['duration']]
            else: info = [row['label'], 0, row['onset'], row['duration'], row['channel'], row['confidence'], row['annotator']]

            if (annotator == None or annotator == row['annotator']): fileinfo.append(info)

        return fileinfo

    except Exception as e:
        print("Error: No autogenerated annotations:", autoannotations_path, e)
